/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        colon_semicolon: colon_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;

            mods = <(MOD_LSFT | MOD_RSFT)>;
        };
    };

    tilde_slash_macro: tilde_slash_macro {
        compatible = "zmk,behavior-macro";
        label = "TILDE_SLASH";
        #binding-cells = <0>;
        bindings = <&kp TILDE &kp FSLH>;
    };
};

/ {
    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  :  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R           &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P             &kp BSPC
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D     &kp F           &kp G        &kp H    &kp J  &kp K      &kp L    &colon_semicolon  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C     &kp V           &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH          &kp ESC
                                &kp LGUI  &lt 1 LEFT_ALT  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4              &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans     &mkp MLT  &mkp MDN  &mkp MUP  &mkp MRT         &tilde_slash_macro  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT  &trans  &trans  &trans    &mkp LCLK           &trans       &trans    &trans    &trans    &trans     &trans  &tog 3
                           &kp LGUI  &trans              &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        config_layer {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
&bt BT_CLR      &bt BT_DISC 0  &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans         &trans        &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                             &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
