/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        colon_semicolon: colon_semicolon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;

            mods = <(MOD_LSFT | MOD_RSFT)>;
        };

        slash_tapdance: slash_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASH_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp FSLH>, <&kp QMARK>, <&kp BSLH>;
        };

        tab_tapdance: tab_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp TAB>, <&mt LSHIFT TAB>;
        };
    };

    tilde_slash_macro: tilde_slash_macro {
        compatible = "zmk,behavior-macro";
        label = "TILDE_SLASH";
        #binding-cells = <0>;
        bindings = <&kp TILDE &kp FSLH>;
    };
};

/ {
    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  :  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&tab_tapdance     &kp Q  &kp W  &kp E           &kp R           &kp T        &kp Y    &kp U  &kp I            &kp O    &kp P             &kp BSPC
&mt LCTRL ESCAPE  &kp A  &kp S  &kp D           &kp F           &kp G        &kp H    &kp J  &kp K            &kp L    &colon_semicolon  &kp SQT
&kp LSHFT         &kp Z  &kp X  &kp C           &kp V           &kp B        &kp N    &kp M  &kp COMMA        &kp DOT  &slash_tapdance   &kp ESC
                                &lt 4 LEFT_GUI  &lt 1 LEFT_ALT  &kp SPACE    &kp RET  &mo 2  &lt 4 RIGHT_ALT
            >;
        };

        lower_layer {
            bindings = <
&kp TAB       &kp N1  &kp N2  &kp N3    &kp N4              &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&kp LEFT_ALT  &trans  &trans  &trans    &tilde_slash_macro  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT     &trans  &trans  &trans    &trans              &trans       &trans    &trans    &trans    &trans     &trans  &tog 3
                              &kp LGUI  &trans              &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        config_layer {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1  &trans  &sys_reset  &out OUT_USB    &out OUT_BLE  &sys_reset  &trans  &trans  &trans  &to 0
&bt BT_CLR      &bt BT_DISC 0  &trans        &trans  &trans      &trans          &trans        &trans      &trans  &trans  &trans  &trans
&trans          &trans         &trans        &trans  &trans      &bootloader     &bootloader   &trans      &trans  &trans  &trans  &trans
                                             &trans  &trans      &trans          &trans        &trans      &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &mkp RCLK       &trans          &msc SCRL_UP  &trans           &trans       &trans     &trans          &msc SCRL_UP    &trans        &mkp RCLK        &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp LCLK    &mkp LCLK  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans          &trans          &trans        &msc SCRL_DOWN   &trans       &trans     &msc SCRL_DOWN  &trans          &trans        &trans           &trans
                                        &trans        &trans           &trans       &trans     &trans          &trans
            >;
        };
    };
};
